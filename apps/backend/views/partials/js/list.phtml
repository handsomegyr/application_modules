<script>
	var List = function() {

		return {
			url: '<?php echo $this->view->baseUrl ?><?php echo $this->view->moduleName ?>/<?php echo $this->view->controllerName ?>',
			imagepath: '<?php echo $this->view->baseUrl ?>backend/',
			compileFilter: function() {
				var data = new Object;
				/**
				for (var i in List.filter)
				{
					if (typeof(List.filter[i]) != "function" && typeof(List.filter[i]) != "undefined")
					{
						data[i] = encodeURIComponent(List.filter[i]);
					}
				}**/

				return data;
			},
			remove: function(id, cfm, opt) {
				opt = "remove";
				var data = List.compileFilter();
				data.id = encodeURIComponent(id);
				data._method = 'delete';
				data._token = LA.token;
				var url = List.url + "/" + opt;

				swal({
					title: "确认删除?",
					type: "warning",
					showCancelButton: true,
					confirmButtonColor: "#DD6B55",
					confirmButtonText: "确认",
					showLoaderOnConfirm: true,
					cancelButtonText: "取消",
					preConfirm: function() {
						return new Promise(function(resolve) {
							$.ajax({
								type: 'post',
								url: url,
								data: data,
								dataType: "json",
								success: function(data) {
									$('#example').DataTable().draw();
									resolve(data);
								}
							});
						});
					}
				}).then(function(result) {
					console.log(result);
					var data = result.value;
					if (typeof data === 'object') {
						if (!data.error) {
							swal(data.message, '', 'success');
						} else {
							swal(data.message, '', 'error');
						}
					}
				});

				// if (confirm(cfm)) {
				// 	var data = List.compileFilter();
				// 	data.id = encodeURIComponent(id);
				// 	$.ajax({
				// 		type: 'POST',
				// 		url: List.url + "/" + opt,
				// 		data: data,
				// 		success: function(result) {
				// 			if (result.message) {
				// 				alert(result.message);
				// 			}
				// 			if (result.error == 0) {
				// 				$('#example').DataTable().draw();
				// 			}
				// 		},
				// 		dataType: "json"
				// 	});
				// }
			},
			toggle: function(obj, act, id, fieldname) {
				val = ($(obj).text() == '是') ? 0 : 1;

				var data = {};
				data[fieldname] = encodeURIComponent(val);
				data.id = encodeURIComponent(id);

				$.ajax({
					type: 'POST',
					url: List.url + "/" + act,
					data: data,
					success: function(result) {
						if (result.message) {
							alert(result.message);
						}
						if (result.error == 0) {
							text = (result.content > 0) ? '是' : '否';
							css = (result.content > 0) ? 'success' : 'danger';
							$(obj).text(text);
							$(obj).attr('class', 'label label-' + css);
						}
					},
					dataType: "json"
				});
			},
			edit: function(obj, act, id, fieldname) {
				var tag = obj.firstChild.tagName;
				if (typeof(tag) != "undefined" && tag.toLowerCase() == "input") {
					return;
				}

				/* 保存原始的内容 */
				var org = $(obj).html();
				var val = $(obj).text();

				/* 创建一个输入框 */
				var txt = $('<input type = "text" />');
				txt.val(val);
				txt.css("width", (obj.offsetWidth + 12) + "px");
				/* 编辑区输入事件处理函数 */
				txt.keypress(function(event) {
					if (event.which == 13) //enter
					{
						$(event.target).blur();
						return false;
					}
					if (event.which == 27) //esc
					{
						$(event.target).parent().html(org);
					}
				});
				/* 编辑区失去焦点的处理函数 */
				txt.blur(function(event) {
					var newval = $.trim($(event.target).val());
					if (newval.length > 0 && newval != val) {
						var data = new Object;
						data[fieldname] = encodeURIComponent(newval);
						data.id = encodeURIComponent(id);

						$.ajax({
							type: 'POST',
							url: List.url + "/" + act,
							data: data,
							success: function(res) {
								if (res.message) {
									alert(res.message);
								}
								$(event.target).parent().html((res.error == 0) ? res.content : org);
							},
							dataType: "json"
						});
					} else {
						$(event.target).parent().html(org);
					}
				});
				/* 隐藏对象中的内容，并将输入框加入到对象中 */
				$(obj).empty();
				$(obj).append(txt);
				txt.focus();
			},
			call: function(id, cfm, opt) {

				if (confirm(cfm)) {
					var data = List.compileFilter();
					data.id = encodeURIComponent(id);
					$.ajax({
						type: 'POST',
						url: List.url + "/" + opt,
						data: data,
						success: function(result) {
							console.info(result);
							if (result.message) {
								alert(result.message);
							}
							if (result.error == 0) {
								$('#example').DataTable().draw();
							}
						},
						dataType: "json"
					});
				}
			},
			//main function to initiate the module
			init: function() {

				$('.5e280b9811ada-filter-btn').unbind('click');
				$('.5e280b9811ada-filter-btn').click(function(e) {
					if ($('#filter-box').is(':visible')) {
						$('#filter-box').addClass('hide');
					} else {
						$('#filter-box').removeClass('hide');
					}
				});

				<?php foreach ($this->view->headerTools as $key => $tool) { ?>
					<?php if (!empty($tool['is_show']) && empty($tool['is_export'])) { ?>
						$('.header-tool-<?php echo $key ?>').off('click').on('click', function(e) {
							e.preventDefault();
							var url = '<?php echo $this->view->baseUrl ?><?php echo $this->view->moduleName ?>/<?php echo $this->view->controllerName ?>/<?php echo $tool['action'] ?>';
							App.process4Modal(url, this);
						});
					<?php } ?>
				<?php } ?>

				//https://datatables.net/reference/option/#Features
				$('#example').dataTable({
					//"dom": '<"top"i>rt<"bottom"flp><"clear">',
					//"jQueryUI": true,
					"dom": 'rt<"bottom"ilp>',
					//dom: 'Bfrtip',
					//dom": '<"H"lfr>t<"F"ip>',
					// "buttons": ['csv', 'excel', 'pdf', 'print'],
					"autoWidth": true,
					"scrollX": true,
					"processing": true,
					"serverSide": true,
					"searching": false,
					"paging": true,
					"ordering": true,
					"order": [<?php echo $orderIdx ?>, '<?php echo $orderBy ?>'],
					"displayStart": 0,
					"lengthMenu": [1, 5, 10, 15, 100],
					"lengthChange": true,
					"pageLength": 30,
					"pagingType": "full_numbers",
					"ajax": {
						"url": "<?php echo $this->view->baseUrl ?><?php echo $this->view->moduleName ?>/<?php echo $this->view->controllerName ?>/query",
						"type": 'POST',
						"data": function(d) {
							// alert('datatable ajax');
							d = Search.getConditions(d);
							console.log(d);
						}
					},
					"columns": [
						<?php foreach ($this->view->schemas as $key => $field) { ?>
							<?php if (!empty($field['list']['is_show'])) { ?> {
									"data": "<?php echo isset($field['list']['list_data_name']) ? $field['list']['list_data_name'] : $key ?>",
									"name": "<?php echo $key ?>",
									<?php if ($field['data']['type'] == "boolean" && isset($field['list']['list_type']) && $field['list']['list_type'] == 1) { ?> "render": function(data, type, full, meta) {
											//console.info(data);
											if (data == 1) {
												return '<span <?php if ($this->myTag->isCanDo($this->view->moduleName, $this->view->controllerName, 'edit') && isset($field['list']['ajax'])) { ?>onclick="List.toggle(this, \'<?php echo $field['list']['ajax'] ?>\', \'' + full['_id'] + '\', \'<?php echo $key ?>\')"<?php } ?>class="label label-success">是</span>';
											} else {
												return '<span <?php if ($this->myTag->isCanDo($this->view->moduleName, $this->view->controllerName, 'edit') && isset($field['list']['ajax'])) { ?>onclick="List.toggle(this, \'<?php echo $field['list']['ajax'] ?>\', \'' + full['_id'] + '\', \'<?php echo $key ?>\')"<?php } ?>class="label label-danger">否</span>';
											};
										}
									<?php } elseif (($field['data']['type'] == "file" || $field['data']['type'] == "image") && isset($field['list']['render']) && $field['list']['render'] == 'img') { ?> "render": function(data, type, full, meta) {
											//console.info(data);
											<?php
											$path = "";
											if (!empty($field['data'][$field['data']['type']])) {
												$fileInfo = $field['data'][$field['data']['type']];
												$path = empty($fileInfo['path']) ? '' : trim($fileInfo['path'], '/') . '/';
											}
											?>
											return '<img src="<?php echo $this->view->baseUrl ?>service/file/index?upload_path=<?php echo trim($path, '/') ?>&id=' + data + '&w=50&h=50" style="max-height: 50px;" alt="">';
										}
									<?php } elseif (isset($field['list']['items'])) { ?> "render": function(data, type, full, meta) {
											//console.info(data);
											if (false) {
												return '<span class="label label-info"></span>';
												<?php
												$items = is_callable($field['list']['items']) ? $field['list']['items']() : $field['list']['items'];
												?>
												<?php foreach ($items as $itemKey => $item) { ?>
													<?php if (isset($item['value'])) { ?>
											} else if (data == '<?php echo $item['value'] ?>') {
												return '<span class="label label-info"><?php echo $item['name'] ?></span>';
											<?php } else { ?>
											} else if (data == '<?php echo $itemKey ?>') {
												return '<span class="label label-info"><?php echo $item ?></span>';
											<?php } ?>
											<?php } ?>
											} else {
												return '<span class="label label-info"></span>';
											};
										}
									<?php } elseif (isset($field['list']['ajax'])) { ?> "render": function(data, type, full, meta) {
											<?php if ($this->myTag->isCanDo($this->view->moduleName, $this->view->controllerName, 'edit')) { ?>
												return '<span onclick="List.edit(this, \'<?php echo $field['list']['ajax'] ?>\', \'' + full['_id'] + '\', \'<?php echo $key ?>\')" >' + data + '</span>';
											<?php } else { ?>
												return '<span>' + data + '</span>';
											<?php } ?>
										}
									<?php } elseif (isset($field['list']['show_type'])) { ?> "render": function(data, type, full, meta) {
											<?php if ($field['list']['show_type'] == 'icon') { ?>
												return '<span><i class="fa ' + data + '"></i></span>';
											<?php } else { ?>
												return '<span>' + data + '</span>';
											<?php } ?>
										}
									<?php } ?>
								},
							<?php } ?>
						<?php } ?> {
							"data": "operation",
							"orderable": false,
							"searchable": false,
							"render": function(data, type, full, meta) {
								var id = full['_id'];
								var editOp = '';
								<?php if ($this->myTag->isCanDo($this->view->moduleName, $this->view->controllerName, 'edit')) { ?>
									editOp = '<a class="btn btn-sm btn-primary" href="<?php echo $this->view->baseUrl ?><?php echo $this->view->moduleName ?>/<?php echo $this->view->controllerName ?>/edit?id=' + id + '"><i class="fa fa-edit"></i>编辑</a>';
								<?php } ?>
								var deleteOp = '';
								<?php if ($this->myTag->isCanDo($this->view->moduleName, $this->view->controllerName, 'remove')) { ?>
									deleteOp = '<a class="btn btn-sm btn-danger" href="javascript:;" onclick="List.remove(\'' + id + '\', \'你确定要删除这条记录吗？\')"><i class="fa fa-trash"></i>删除</a>';
								<?php } ?>
								var toolOps = [];
								<?php foreach ($this->view->rowTools as $key => $tool) { ?>
									<?php if (!empty($tool['is_show'])) { ?>
										<?php if ($this->myTag->isCanDo($this->view->moduleName, $this->view->controllerName, $tool['action'])) { ?>
											var url = '<?php echo $this->view->baseUrl ?><?php echo $this->view->moduleName ?>/<?php echo $this->view->controllerName ?>/<?php echo $tool['action'] ?>?id=' + id;
											var toolOp = '<a class="btn btn-sm btn-primary row-tool-<?php echo $key ?>" record_id="' + id + '" href="javascript:;" onclick="App.process4Modal(\'' + url + '\',this)" ><i class="fa <?php echo empty($tool['icon']) ? 'fa-edit' : $tool['icon'] ?>"></i><?php echo $tool['title'] ?></a>';
											toolOps.push(toolOp);
										<?php } ?>
									<?php } ?>
								<?php } ?>
								var ops = '';
								$.each(toolOps, function(i, n) {
									ops += ("&nbsp;" + n);
								});

								return editOp + '&nbsp;' + deleteOp + '&nbsp;' + ops;
							}
						}
					]
				});
			}
		};

	}();
</script>