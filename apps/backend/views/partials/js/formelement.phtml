       
<?php foreach ($schemas4Form as $key => $field) { ?>
    <?php if (!empty($field['form']['is_show']) && !empty($field['form']['input_type'])) { ?>
        <?php $field['name'] = empty($field['form']['name']) ? $field['name'] : $field['form']['name']; ?>
        <?php if ($field['form']['input_type'] == "datetimepicker") { ?>
            $('.<?php echo $key ?>').parent().datetimepicker({
                "format": "YYYY-MM-DD HH:mm:ss",
                "allowInputToggle": true,
                "locale": "zh-CN"
            });
        <?php } elseif ($field['form']['input_type'] == "select") { ?>
            $('.<?php echo $key ?>').select2({
                "allowClear": true,
                "placeholder": {
                    "id": "",
                    "text": "<?php echo $field['name'] ?>"
                }
            });
            <?php if (!empty($field['form']['cascade'])) { ?>
                $('.<?php echo $field['form']['cascade'] ?>').change(function() {
                    var cascadeSelect = $('.<?php echo $key ?>');
                    var selectedValue=$('.<?php echo $field['form']['cascade'] ?>').val();
                    cascadeSelect.empty();
                    var data1 = [];
                    Object.assign(data1, {
                        _token: LA.token,
                        <?php echo !empty($field['form']['cascadeAjax']['param_name'])?$field['form']['cascadeAjax']['param_name']:$field['form']['cascade'] ?>: selectedValue,
                    });
                    var formData1 = {};
                    for (var key in data1) {
                        // formData1.append(key, data1[key]);
                        formData1[key] = data1[key];
                    }

                    $.ajax({
                        type: "<?php echo $field['form']['cascadeAjax']['type'] ?>", //方法类型
                        url: '/<?php echo $field['form']['cascadeAjax']['url'] ?>',
                        <!-- cache: false, -->
                        data: formData1,
                        dataType: "json", //预期服务器返回的数据类型
                        success: function(response) {
                            console.log(response); //打印服务端返回的数据(调试用)
                            if (!response.error) {
                                // create the option and append to Select2
                                var firstData = {
                                    id: 0,
                                    text: '请选择...'
                                };
                                response.content.unshift(firstData);
                                response.content.forEach(item=>{
                                    var option = new Option(item.text, item.id, false, false);
                                    cascadeSelect.append(option);                                    
                                });
                                cascadeSelect.trigger('change');
                                // manually trigger the `select2:select` event
                                cascadeSelect.trigger({
                                    type: 'select2:select',
                                    params: {
                                        data: response.content[0]
                                    }
                                });                                
                            } else {
                                
                            }
                        },
                        error: function(request) {
                            
                        }
                    });
                });
            <?php } ?>
        <?php } elseif ($field['form']['input_type'] == "icon") { ?>
            $('.<?php echo $key ?>').iconpicker({placement:'bottomLeft'});            
        <?php } elseif ($field['form']['input_type'] == "ueditor") { ?>
            UE.delEditor("<?php echo $key ?>");
            var ue_<?php echo $key ?> = UE.getEditor('<?php echo $key ?>');
        <?php } elseif ($field['form']['input_type'] == "ckeditor") { ?>
            CKEDITOR.replace('<?php echo $key ?>');
        <?php } elseif ($field['form']['input_type'] == "number") { ?>
            $('.<?php echo $key ?>:not(.initialized)')
                .addClass('initialized')
                .bootstrapNumber({
                    upClass: 'success',
                    downClass: 'primary',
                    center: true
                });
        <?php } elseif ($field['form']['input_type'] == "image" || $field['form']['input_type'] == "file" || 
                        $field['form']['input_type'] == "multipleImage" || $field['form']['input_type'] == "multipleFile") { ?>

        <?php
            if(!isset($row['id'])){
                $row['id'] = '';
            }
            $sortable = true;
            $path = "";
            if (!empty($field['data']) && !empty($field['data'][$field['data']['type']])) {
                $fileInfo = $field['data'][$field['data']['type']];
                $path = empty($fileInfo['path']) ? '' : trim($fileInfo['path'], '/') . '';
            }
            $data_initial_preview = "";
            $data_initial_caption = "";
            $initialPreviewConfig = array();
            $initialPreview = array();
            if (!empty($this->view->row[$key])) {
                if ($field['form']['input_type'] == "image" || $field['form']['input_type'] == "file") {
                    $fileList4Upload=array($this->view->row[$key]);
                }else{
                    $fileList4Upload=$this->view->row[$key];
                }
                foreach ($fileList4Upload as $idx => $fileInfo) {
                    // $data_initial_preview = $this->view->baseUrl . "service/file/index?upload_path=" . $path . "&id=" . $fileInfo . "&s=1";
                    $data_initial_preview = $this->myTag->getUploadFilePath($path,$fileInfo);
                    // 
                    $data_initial_caption = basename($fileInfo);
                    // {
                    //     "caption": "faa855d089c01a90574083cb28bd4eea.png",
                    //     "key": 0,
                    //     "type": "image",
                    //     "downloadUrl": "http://qiaohuoss.eintone.com/qh/images/faa855d089c01a90574083cb28bd4eea.png"
                    // }
                    $initialPreviewConfigItem = array(
                        'caption' => $data_initial_caption,
                        'key' => $fileInfo,
                        // 'downloadUrl' => "http://www.myapplicationmodule.com.com{$data_initial_preview}"
                        'downloadUrl' => $data_initial_preview
                    );
                    if ($field['form']['input_type'] == "image" || $field['form']['input_type'] == "multipleImage") {
                        $initialPreviewConfigItem['type'] = 'image';
                    }else{
                        // ,"type":"audio","filetype":"audio\/mp3"
                        if(!empty($field['form'][$field['form']['input_type']]['type'])){
                            $initialPreviewConfigItem['type'] = $field['form'][$field['form']['input_type']]['type'];
                        }
                        if(!empty($field['form'][$field['form']['input_type']]['filetype'])){
                            $initialPreviewConfigItem['filetype'] = $field['form'][$field['form']['input_type']]['filetype'];
                        }
                        if(empty($initialPreviewConfigItem['type'])){
                            if(!empty($path)){
                                $filename = APP_PATH. 'public/upload/' . $path . '/' . $fileInfo;
                            }else{
                                $filename = APP_PATH. 'public/upload/' . $fileInfo;
                            }
                            // die($filename) ;      
                            $fi = new finfo(FILEINFO_MIME_TYPE);
                            $mime_type = $fi->file($filename);
                            $mime_type_arr = explode('/',$mime_type);
                            $initialPreviewConfigItem['type'] = $mime_type_arr[0];
                            $initialPreviewConfigItem['filetype'] = $mime_type;
                        }                        
                    }                  

                    $initialPreviewConfig[] = $initialPreviewConfigItem;
                    $initialPreview[] = $data_initial_preview;
                }
            }
            ?>
            // $("input.<?php echo $key ?>").fileinput();
            $("input.<?php echo $key ?>").fileinput({
            <?php if(!empty($initialPreviewConfig)){?>
                "initialPreviewConfig": <?php echo \json_encode($initialPreviewConfig) ?>,
            <?php }?>
            <?php if(!empty($initialPreview)){?>
                "initialPreview": <?php echo \json_encode($initialPreview) ?>,
            <?php }?>
                //"overwriteInitial": false,
                "overwriteInitial": true,
                "initialPreviewAsData": true,
                "browseLabel": "浏览",
                "cancelLabel": "取消",
                "showRemove": false,
                "showUpload": false,
                "showCancel": false,
                "dropZoneEnabled": false,
                "deleteExtraData": {
                    "<?php echo $key ?>": "_file_del_",
                    "_file_del_": "",
                    "_token": LA.token,
                    "_method": "PUT"
                },
                "deleteUrl": "<?php echo $this->view->baseUrl . $this->view->moduleName . '/' . $this->view->controllerName . '/removefile?id=' . $this->view->row['_id'] . '&_field_del_=' . $key ?>",
                "fileActionSettings": {
                    "showRemove": <?php if ($this->myTag->isCanDo($this->view->moduleName, $this->view->controllerName, 'removefile') && !$this->view->readonly) { ?>true<?php } else { ?>false<?php } ?>,
                    "showDrag": true
                    //"showDrag": false 
                },
                "msgPlaceholder": "选择<?php if ($field['form']['input_type'] == "image" || $field['form']['input_type'] == "multipleImage") { ?>图片<?php } else { ?>文件<?php } ?>",
                <?php if ($field['form']['input_type'] == "image" || $field['form']['input_type'] == "multipleImage") { ?> "allowedFileTypes": ["image"] <?php } ?>
            });
            $("input.<?php echo $key ?>").on('filebeforedelete', function() {
                return new Promise(function(resolve, reject) {

                    var remove = resolve;

                    swal({
                        title: "确认删除?",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "确认",
                        showLoaderOnConfirm: true,
                        cancelButtonText: "取消",
                        preConfirm: function() {
                            return new Promise(function(resolve) {
                                resolve(remove());
                            });
                        }
                    });
                });
            });
            $("input.<?php echo $key ?>").on('filesorted', function(event, params) {

                var order = [];

                params.stack.forEach(function(item) {
                    order.push(item.key);
                });

                $("input.<?php echo $key ?>_sort").val(order);
            });
        <?php } ?>
    <?php } ?>
<?php } ?>
//iCheck for checkbox and radio inputs
$('input[type="checkbox"].minimal, input[type="radio"].minimal').iCheck({
    checkboxClass: 'icheckbox_minimal-blue',
    radioClass: 'iradio_minimal-blue'
});
//Red color scheme for iCheck
$('input[type="checkbox"].minimal-red, input[type="radio"].minimal-red').iCheck({
    checkboxClass: 'icheckbox_minimal-red',
    radioClass: 'iradio_minimal-red'
});
//Flat red color scheme for iCheck
$('input[type="checkbox"].flat-red, input[type="radio"].flat-red').iCheck({
    checkboxClass: 'icheckbox_flat-green',
    radioClass: 'iradio_flat-green'
});